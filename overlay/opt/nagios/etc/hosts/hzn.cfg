# 'hzn' definition
define host{
  use                     linux-server
  host_name               hzn.local
  alias                   hzn
  address                 127.0.0.1
  icon_image              domain.png
  check_command		        check_ping!100.0,20%!500.0,60%
  }
# 'docker' definition
define host{
  host_name   docker.local
  alias       docker
  address     192.168.1.1
  parents	    hzn.local
  use         linux-server
  icon_image  ubuntu.gif
}
# 'rt-ac5300' definition
define host{
  host_name   rt-ac5300.local
  alias       rt-ac5300
  address     192.168.1.254
  parents	    hzn.local
  use         linux-server
  icon_image  switch2.gif
}
# 'rt-ac68u' definition
define host{
  host_name   rt-ac68u.local
  alias       rt-ac68u
  address     192.168.1.253
  parents	    hzn.local
  use         linux-server
  icon_image  switch2.gif
}
# 'esxi' definition
define host{
  host_name   esxi.local
  alias       esxi
  address     192.168.1.5
  parents	    hzn.local
  use         linux-server
  icon_image  esxi.png
}
# 'sonoszp' definition
define host{
  host_name   sonoszp.local
  alias       sonoszp
  address     192.168.1.61
  parents	    hzn.local
  use         linux-server
  icon_image  sonos.png
}
# 'xXx' definition
define host{
  host_name   xXx.local
  alias       xXx
  address     192.168.1.254
  parents	    hzn.local
  use         linux-server
  check_command check_ping!200.0,20%!600.0,60%
}

# 'hzn' service
define service{
  use                 generic-service,graphed-service
  host_name           hzn.local
  service_description ICMP Echo Pings
  check_command       check_ping!200.0,20%!600.0,60%
  servicegroups       hzn-services
}
# 'docker' service
define service{
  use                 generic-service,graphed-service
  host_name           docker.local
  service_description ICMP Echo Pings
  check_command       check_ping!200.0,20%!600.0,60%
  servicegroups       hzn-services
}
# 'rt-ac5300' service
define service{
  use                 generic-service,graphed-service
  host_name           rt-ac5300.local
  service_description ICMP Echo Pings
  check_command       check_ping!200.0,20%!600.0,60%
  servicegroups       hzn-services
}
# 'rt-ac68u' service
define service{
  use                 generic-service,graphed-service
  host_name           rt-ac68u.local
  service_description ICMP Echo Pings
  check_command       check_ping!200.0,20%!600.0,60%
  servicegroups       hzn-services
}
# 'esxi_ping' service
define service{
  use                 generic-service,graphed-service
  host_name           esxi.local
  service_description ICMP Echo Pings
  check_command       check_ping!200.0,20%!600.0,60%
#  servicegroups       hzn-services
  icon_image          esxi.png
}
# 'esxi' - VMware vCenter
define service{
  use                 generic-service,graphed-service
  host_name           esxi.local
  service_description VMware vCenter
  check_command       check_tcp!443!2
  icon_image          vmwarevcenter.png
}
# 'check_ssh' service
define service{
  use                 normal_service,graphed-service
  host_name           esxi.local
  service_description Service: OpenSSH
  check_command       check_ssh!4!10!OpenSSH_6.7p1!!192.168.1.1!localhost
  icon_image          vmwarevcenter.png
}
# 'sonoszp' service
define service{
  use                 generic-service,graphed-service
  host_name           sonoszp.local
  service_description Sonos Bridge
  check_command       check_ping!200.0,20%!600.0,60%
  servicegroups       hzn-services
}
# 'portainer' service
define service{
  use                 normal_service,graphed-service
  host_name           docker.local
  service_description Service: Portainer
  check_command       check_tcp!80!2
  icon_image          portainer.png
}
# 'mailhog' service
define service{
  use                 normal_service,graphed-service
  host_name           docker.local
  service_description Service: MailHog
  check_command       check_tcp!8025!2
  icon_image          mailhog.png
}
# 'gitea' service
define service{
  use                 normal_service,graphed-service
  host_name           docker.local
  service_description Service: GITea
  check_command       check_tcp!3002!2
  icon_image          gitea.png
}
# 'haproxy_http' service
define service{
  use                 normal_service,graphed-service
  host_name           docker.local
  service_description Service: HAProxy - HTTP 
  check_command       check_tcp!443!2
  icon_image          haproxy.png
}
# 'haproxy_https' service
define service{
  use                 normal_service,graphed-service
  host_name           docker.local
  service_description Service: HAProxy - HTTPS
  check_command       check_tcp!443!2
  icon_image          haproxy.png
}
# 'haproxy_stats' service
define service{
  use                 normal_service,graphed-service
  host_name           docker.local
  service_description Service: HAProxy - Statistics 
  check_command       check_tcp!443!2
  icon_image          haproxy.png
}
# 'jackett' service
define service{
  use                 normal_service,graphed-service
  host_name           docker.local
  service_description Service: Jackett
  check_command       check_tcp!9117!2
  icon_image          jackett.png
}
# 'nzbhydra' service
define service{
  use                 normal_service,graphed-service
  host_name           docker.local
  service_description Service: nzbhydra
  check_command       check_tcp!5076!2
  icon_image          nzbhydra.png
}
# 'plex' service
define service{
  use                 normal_service,graphed-service
  host_name           docker.local
  service_description Service: Plex
  check_command       check_tcp!32400!2
  icon_image          plex.png
}
# 'sonarr' service
define service{
  use                 normal_service,graphed-service
  host_name           docker.local
  service_description Service: Sonarr
  check_command       check_tcp!8989!2
  icon_image          sonarr.png
}
# 'hzn' servicegroup
define servicegroup {
  servicegroup_name hzn-services
  alias             HZN Services
  #members           esxi.local,'ICMP Echo Pings',esxi.local,'VMware vCente',esxi.local,'Service: OpenSSH'
  }

# 'hts' servicegroup
#define servicegroup {
#  servicegroup_name hts-services
#  alias             HTS Services
#  members           docker.local,portainer,docker.local,mailhog,docker.local,gitea,docker.local,haproxy_http,docker.local,haproxy_https,docker.local,haproxy_stats,docker.local,jackett,docker.local,nzbhydra,docker.local,plex
#  }